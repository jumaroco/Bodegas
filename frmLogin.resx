<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>